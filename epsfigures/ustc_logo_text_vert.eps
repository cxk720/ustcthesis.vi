%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0.00000 0.00085 62.36220 402.51969 
%%LanguageLevel: 3
%%Creator: CorelDRAW X6
%%Title: ustc_logo_text_vert.eps
%%CreationDate: Thu Jun 12 20:46:16 2014
%%DocumentProcessColors: Cyan Magenta 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW X6 16.1.0.843 °æ±¾
/EpsFile true def
%%BeginResource: procset wCorel16Dict 16.0 0
/wCorel16Dict 300 dict def wCorel16Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/validate_cie_colorspace_whitepoint{load dup aload pop
/WhitePoint get 1 1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE
where{pop/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint
/DocGrayScaleSpace xd DocGrayScaleSpace aload pop begin pop/DecodeA where{pop
DecodeA type/arraytype eq{DecodeA aload pop/DecodeA exch def}if}if end}if
/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE validate_cie_colorspace_whitepoint
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE
validate_cie_colorspace_whitepoint/DocCmykSpace xd}if}bd/set_rendering_intent{
Level3{findcolorrendering{/ColorRendering findresource setcolorrendering}{dup
/DefaultColorRendering eq{pop}{/ColorRendering findresource setcolorrendering}
}ifelse}{pop}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5
array astore}def}ifelse/setcustomcolor where SeparationMode/OnHost ne and{pop}
{/tint_cmyk_color{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}
ifelse}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll
pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch
aload pop SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{
CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd
}ifelse/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}
repeat 3 copy min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd
/safe_setcolorspace{dup currentcolorspace eq{pop}{setcolorspace}ifelse}bd
/safe_setoverprint{dup type/booleantype eq{dup currentoverprint ne{
setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse}bd/is_cmyk_channel_name{
/channel_name xd channel_name/Cyan eq channel_name/Magenta eq or channel_name
/Yellow eq or channel_name/Black eq or{true}{false}ifelse}bd
/is_rgb_channel_name{/channel_name xd channel_name/Red eq channel_name/Green eq
or channel_name/Blue eq or{true}{false}ifelse}bd/is_spot_channel_name{
/channel_name xd channel_name is_cmyk_channel_name channel_name
is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse}bd
/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{currentdict false
SeparationMode/OnHost eq{SeparationPlateName/Black eq{SeparateInColor{pop
convert_to_cmyk true}{pop true}ifelse}if}if}bd/convert_to_cmyk{0 0 0 color
aload pop 1 exch sub create_cmyk_color}bd currentdict end def
/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin/color exch 1 array
astore def/ColorSpace DocGrayScaleSpace def currentdict end}bd/RgbColorSpec
ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3 def/ColorModel/Rgb
def/ColorSpace DocRgbSpace def/separate_color{convert_to_cmyk/separate_color
dexec}bd/convert_to_cmyk{color aload pop convert_rgb_to_cmyk create_cmyk_color
}bd currentdict end def/create_rgb_color{RgbColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocRgbSpace def currentdict end}bd
/CmykColorSpec ColorSpec 9 dict copy begin/names{/Cyan/Magenta/Yellow/Black}
def/num 4 def/ColorModel/Cmyk def/ColorSpace DocCmykSpace def/separate_color{
currentdict false SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{
color SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0
4 SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}if}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/separate_color{SeparateInColor{convert_to_cmyk true}{color
aload pop 1 exch sub create_grayscale_color true}ifelse}bd/convert_to_cmyk{
color aload pop dup dup dup create_cmyk_color}bd currentdict end def
/create_registration_color{RegistrationColorSpec 9 dict copy begin 1 array
astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict copy begin
/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace def
/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0 0 0
create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9 dict
copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def currentdict
end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd
}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{
@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel16Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00085 62.36220 402.51969 @E
/$fm 0 def
62.36220 0.00085 m
0.00000 0.00085 L
0.00000 402.51969 L
62.36220 402.51969 L
62.36220 0.00085 L
@c
N

@rax %Note: Object
17.89739 11.27650 44.46454 58.42460 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
28.50009 52.01660 m
31.09153 51.92901 31.87786 49.06375 34.37461 49.34636 C
34.64589 49.65506 34.82532 49.41468 35.28992 49.57540 C
36.97257 50.15650 39.90217 52.65638 42.23254 51.33005 C
43.51691 50.59899 44.33017 47.02876 42.76602 45.91332 C
42.31134 45.71178 38.40548 45.01956 38.11294 45.15052 C
35.97647 44.22869 34.11241 42.84992 32.23843 41.71748 C
32.26394 41.66674 32.28945 41.61600 32.31496 41.56498 C
32.36598 41.56498 32.41672 41.56498 32.46718 41.56498 C
33.38022 41.36145 35.04104 41.88444 36.20551 41.33622 C
39.26948 39.89424 42.64753 38.53956 42.53754 34.39389 C
42.09052 34.15323 41.66674 33.63194 41.16444 33.40205 C
40.10343 32.91732 37.13584 32.77701 36.96831 31.72394 C
38.66003 29.21896 34.76835 26.21906 33.68835 24.17131 C
33.88139 23.62082 34.10050 23.19250 34.60365 22.95071 C
35.36646 22.95071 36.12926 22.95071 36.89263 22.95071 C
37.78186 23.31694 41.70161 25.00724 43.22381 24.32381 C
44.99603 23.52813 44.70775 20.90353 43.37660 19.82268 C
41.16983 19.88447 39.27005 20.49846 36.89263 19.21238 C
36.13606 18.80362 35.66523 19.15483 35.13713 18.60236 C
35.12863 17.02630 35.43846 15.91625 35.44271 14.02469 C
31.39880 11.20280 26.80781 9.73247 22.70239 13.71997 C
21.88431 14.51452 20.84882 15.47830 20.64274 16.84772 C
22.32709 16.79187 23.63584 15.40403 24.99109 14.78778 C
25.60167 14.76227 26.21225 14.73704 26.82198 14.71153 C
30.31937 14.71124 31.87474 16.26066 33.53556 18.06803 C
33.51005 18.24605 33.48454 18.42435 33.45902 18.60236 C
33.30680 18.78038 33.15402 18.95811 33.00123 19.13613 C
32.23843 19.13613 31.47591 19.13613 30.71254 19.13613 C
30.08098 18.99213 28.68718 18.48699 27.96661 18.14457 C
26.52520 17.45972 20.52652 17.79874 19.65090 18.83112 C
19.31868 19.22343 19.31669 19.80142 19.34589 20.35672 C
19.59987 20.58576 19.85471 20.81452 20.10869 21.04356 C
21.85512 21.88913 24.53017 20.59540 26.74545 21.11953 C
28.05420 21.42964 29.84485 22.76419 31.47591 22.49291 C
31.70948 22.68935 31.87587 22.88806 32.08564 23.10350 C
31.36961 25.45597 32.15225 26.23436 33.15402 27.90935 C
33.35102 28.23931 33.80315 29.42759 33.61181 29.58746 C
32.84220 30.30038 30.90586 28.94542 30.10252 28.74841 C
29.59398 28.74841 29.08517 28.74841 28.57663 28.74841 C
28.30961 32.15197 31.25849 31.72195 33.99307 32.48646 C
35.13345 32.80592 36.20665 33.68608 37.12110 34.24139 C
37.96753 34.75531 39.63600 35.72561 38.79921 37.14038 C
38.43411 37.75776 37.72970 37.71071 37.04457 38.05597 C
33.42614 39.87921 28.55055 36.81156 26.21225 34.85169 C
25.32756 34.11071 23.21603 32.82350 24.22828 30.80835 C
24.57808 30.61276 25.44888 29.51150 25.44888 29.51150 C
25.90328 27.92041 25.05798 26.90731 24.76233 25.92595 C
24.20277 25.83354 24.15317 25.64759 23.46548 25.62066 C
23.24324 25.96139 22.60035 26.40387 22.24460 26.61250 C
21.74712 26.25222 21.34261 26.09405 20.48995 26.23124 C
19.76513 26.90901 17.45405 33.09704 17.97279 34.01263 C
20.47493 35.26384 21.88998 36.93515 23.92328 38.51320 C
24.94006 38.92054 25.95742 39.32731 26.97477 39.73408 C
28.64126 40.95950 29.96362 42.68863 31.39965 44.15868 C
33.17017 45.97200 35.94529 46.40485 37.35014 48.43106 C
37.29940 48.50731 37.24838 48.58356 37.19735 48.65981 C
37.17184 48.65981 37.14661 48.65981 37.12110 48.65981 C
35.82737 47.51717 32.32743 45.17065 30.33128 46.90517 C
29.24787 47.84712 29.66117 49.96602 28.04258 50.49071 C
28.06809 50.87225 28.09332 51.25351 28.11883 51.63506 C
28.29090 51.75808 28.38472 51.83036 28.50009 52.01660 C
@c
23.15991 58.42488 m
23.46548 58.42488 23.77049 58.42488 24.07550 58.42488 C
24.83150 56.09934 26.86252 49.28088 24.68608 46.90517 C
22.00592 46.14463 20.65776 50.03575 20.71928 52.70315 C
22.17997 53.43846 22.27635 56.71843 23.15991 58.42488 C
@c
F

@rax %Note: Object
18.23924 62.49203 44.12268 97.57502 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
34.43443 73.91140 m
38.27169 73.75918 42.86580 68.69707 42.67332 65.06164 C
41.84419 64.73452 40.15672 61.85792 38.47776 62.62044 C
36.54737 63.64176 36.85861 65.79269 35.73128 67.65562 C
34.65978 69.42614 32.63953 70.47496 31.68794 71.92772 C
31.73896 71.92772 31.78998 71.92772 31.84072 71.92772 C
32.25572 73.15058 33.29915 73.36998 34.43443 73.91140 C
@c
27.64460 97.56057 m
28.70872 97.56822 29.88935 97.65921 30.54387 97.25556 C
32.06494 96.31701 32.07997 90.63411 32.06948 87.64328 C
32.06636 86.64945 31.33077 85.12214 31.91726 84.36302 C
33.50409 84.81883 35.51641 84.99855 36.87534 85.96488 C
36.92636 86.19364 36.97739 86.42239 37.02813 86.65143 C
36.67408 87.32750 36.10205 87.68693 35.80781 88.32983 C
35.80781 88.68557 35.80781 89.04189 35.80781 89.39792 C
35.98526 89.39792 36.16356 89.39792 36.34186 89.39792 C
37.60072 87.88365 39.96283 87.60813 42.21553 87.64328 C
42.76658 87.65206 43.01972 87.27676 43.74170 87.26202 C
43.84715 86.91846 43.78082 86.98734 44.12296 86.88019 C
44.12296 86.37194 44.12296 85.86312 44.12296 85.35458 C
43.76211 85.07679 43.60195 84.51780 43.20737 84.28649 C
42.26712 84.13398 41.32545 83.98120 40.38520 83.82869 C
37.01452 82.21776 32.88472 81.15024 30.31483 78.71754 C
30.25701 75.14050 27.88328 69.14466 25.58523 67.57937 C
23.77219 66.34460 19.06498 66.70006 19.10013 69.41027 C
19.10013 69.43578 19.10013 69.46129 19.10013 69.48652 C
19.66847 69.86438 20.11380 70.47921 20.70255 70.85962 C
21.77036 71.11417 22.83874 71.36844 23.90683 71.62271 C
25.19320 72.21373 27.12302 75.92031 27.41613 77.42069 C
27.33959 77.57320 27.26334 77.72598 27.18680 77.87849 C
23.13553 78.74532 21.83754 76.07367 19.02444 79.93814 C
18.82517 80.21140 17.84693 81.18595 18.41386 81.92183 C
18.58422 82.09502 18.80759 82.08794 19.17666 82.07405 C
20.34057 81.67975 21.97843 81.17320 23.14375 81.54000 C
23.70331 81.56551 24.26287 81.59102 24.82243 81.61625 C
25.74482 81.93572 27.67691 82.34561 28.25518 83.06617 C
29.01713 84.01550 28.91594 92.33320 28.25518 93.67002 C
27.86825 94.45266 26.48693 95.50233 26.95833 96.79776 C
27.18680 97.05231 27.41613 97.30658 27.64460 97.56057 C
@c
F

@rax %Note: Object
15.86636 105.18973 46.49669 143.86762 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
26.39452 121.89657 m
25.73490 121.22731 23.92866 117.94252 24.56334 116.86167 C
24.58885 116.86167 24.61436 116.86167 24.63987 116.86167 C
28.54205 116.70576 29.09055 119.81792 26.85203 121.89657 C
26.69924 121.89657 26.54646 121.89657 26.39452 121.89657 C
@c
31.27691 143.56261 m
31.65817 143.53710 32.03943 143.51159 32.42098 143.48608 C
33.05565 142.08463 34.26917 137.66627 33.94687 135.93373 C
33.73824 134.81518 32.57546 131.79458 33.03128 130.82230 C
33.08230 130.74633 33.13276 130.66980 33.18350 130.59354 C
35.08781 130.57455 36.71376 131.51480 37.15058 132.95849 C
37.39890 133.77827 36.66472 134.06258 36.99836 134.63688 C
38.01005 134.47729 42.02986 133.95713 42.41480 133.41628 C
42.71414 132.98428 42.49020 132.18746 42.41480 131.89039 C
38.84060 131.61260 36.93997 129.57194 34.48035 127.69455 C
33.68721 127.08907 32.67043 127.72573 32.19222 126.77896 C
31.48356 125.37865 31.69616 121.08501 31.50539 119.91317 C
31.63266 119.83663 31.75994 119.76066 31.88665 119.68413 C
34.25981 120.03052 34.55546 123.65745 38.44800 120.67625 C
39.61757 119.77994 38.88454 118.24554 39.28706 116.48041 C
39.57959 115.19575 41.23049 114.05537 41.72797 112.58957 C
42.79124 109.45786 38.14498 108.06973 35.92998 109.15625 C
34.19972 110.26687 34.59855 114.86268 32.42098 116.32762 C
32.19222 116.27660 31.96318 116.22614 31.73443 116.17512 C
29.89616 112.83704 32.01335 108.59811 31.27691 105.26570 C
31.22589 105.24047 31.17487 105.21496 31.12413 105.18945 C
28.65402 105.63024 27.80816 108.65424 27.53830 111.36869 C
27.41414 112.62246 28.40854 113.29285 27.84331 114.42047 C
26.81291 114.68069 25.01235 114.44060 24.25776 113.73392 C
23.56157 113.08139 23.64350 111.82677 23.19024 110.91118 C
22.35798 109.23109 20.94803 107.01439 19.45191 105.95254 C
18.62702 105.99591 17.82624 106.38255 17.23946 106.71506 C
17.17172 108.38665 16.74510 108.54397 15.86608 109.61405 C
16.29411 111.20173 16.90157 113.22765 16.47666 115.25953 C
19.47855 117.57118 21.41575 121.32850 24.86835 123.11745 C
26.10992 123.76091 28.14293 122.02809 28.98794 123.65121 C
28.98794 123.93099 28.98794 124.21077 28.98794 124.49055 C
28.75890 124.77005 28.53043 125.04983 28.30110 125.32961 C
27.45014 125.18135 27.13918 124.52995 26.39452 124.33776 C
23.35408 123.55398 21.78595 126.48444 22.35090 128.83890 C
22.37641 128.83890 22.40192 128.83890 22.42687 128.83890 C
24.03780 127.87058 27.26135 128.10784 28.98794 129.06765 C
29.30117 129.85172 29.58321 130.78602 29.75074 131.81414 C
29.77625 132.90746 29.80176 134.00107 29.82728 135.09439 C
30.27685 136.59109 30.63033 137.75584 31.04759 139.06148 C
31.21172 139.57483 30.84009 142.44321 30.89480 143.41011 C
31.02208 143.46057 31.14935 143.51159 31.27691 143.56261 C
@c
37.68463 143.86791 m
40.15984 143.53682 42.48312 143.65247 44.55099 142.34173 C
44.80498 142.18101 46.43972 140.86318 46.30535 140.81613 C
47.33093 137.39868 44.00617 135.94847 41.49950 136.92557 C
41.43033 137.68271 41.22680 138.26721 40.66016 138.52772 C
40.35458 138.57817 40.04986 138.62920 39.74485 138.68022 C
39.61984 140.88189 36.99411 141.79918 37.68463 143.86791 C
@c
F

@rax %Note: Object
12.23433 154.80482 50.12759 194.29455 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
33.63591 177.43465 m
31.76957 176.47597 31.19499 174.88403 30.12690 173.16255 C
28.69087 170.84863 25.27172 166.65534 27.76167 163.01622 C
28.96214 161.26129 32.06211 159.41849 34.93276 160.80378 C
35.63603 161.14252 35.81972 160.89931 36.22961 161.49061 C
35.12721 162.95187 33.50806 167.03093 32.03405 167.82236 C
32.05956 167.87310 32.08507 167.92413 32.11002 167.97458 C
32.97458 167.97458 33.83972 167.97458 34.70428 167.97458 C
35.74715 167.58850 39.33213 165.99770 40.12016 166.44898 C
40.33276 168.60019 41.34869 171.62504 40.04447 173.16255 C
39.78992 173.13704 39.53565 173.11153 39.28110 173.08630 C
38.48627 172.44510 38.25326 170.87131 37.45020 170.33981 C
36.68060 169.83014 36.11906 171.31323 35.92488 171.78917 C
35.14847 173.69065 35.49487 174.96567 35.08554 177.35811 C
34.60252 177.38362 34.11921 177.40913 33.63591 177.43465 C
@c
40.96006 187.96252 m
40.35883 186.53074 39.32334 184.12696 39.51043 182.62233 C
39.56117 182.59682 39.61219 182.57131 39.66321 182.54608 C
40.83024 182.55685 43.40636 183.79020 44.08781 184.45323 C
44.07846 186.09846 42.35613 187.17562 41.41757 187.96252 C
41.26479 187.96252 41.11200 187.96252 40.96006 187.96252 C
@c
37.22145 194.29427 m
39.64932 194.31298 41.06438 193.44699 41.18854 191.31931 C
41.22964 190.62113 40.64088 189.79455 41.18854 189.03061 C
42.38731 187.35931 45.61143 186.70394 48.20683 186.43663 C
48.25786 186.08060 48.30888 185.72457 48.35962 185.36854 C
47.39584 183.44126 44.58898 182.62772 43.01943 181.24923 C
42.51515 180.80589 42.33061 179.90419 41.72258 179.57055 C
39.99231 178.62151 38.12655 178.99228 37.98425 176.44280 C
39.27005 175.15729 42.33940 175.74973 43.24819 174.07786 C
43.68784 173.27027 43.99540 169.68898 43.63002 168.43238 C
43.43329 167.75688 42.69713 165.90161 43.09597 164.99962 C
43.74312 163.92416 45.51137 163.96781 46.60498 163.32123 C
48.19890 162.37928 49.41609 161.47701 50.03773 159.43068 C
50.61373 157.53600 48.31002 155.20734 45.99468 155.69263 C
44.59011 155.98658 43.69890 157.54706 42.63817 158.43883 C
42.22403 158.78693 41.40085 158.91109 40.88353 159.12539 C
40.29591 159.36860 38.07751 158.31638 37.83203 158.20980 C
37.37424 158.18428 36.91672 158.15934 36.45893 158.13383 C
34.63030 157.56293 32.54117 157.06148 30.35537 157.52324 C
30.01266 158.80961 28.83430 160.25669 27.83820 160.95628 C
27.73616 160.95628 27.63439 160.95628 27.53320 160.95628 C
27.48217 160.90554 27.43115 160.85452 27.38041 160.80378 C
27.39288 159.59424 29.01685 155.30031 27.99099 154.85329 C
27.41584 154.60299 26.33754 155.39641 26.08356 155.61609 C
25.14444 156.42907 25.05628 158.02356 24.48170 159.04885 C
23.69282 159.83745 22.90479 160.62576 22.11647 161.41408 C
21.74570 162.09269 22.08416 162.96803 21.50617 163.39748 C
20.77994 163.93691 16.68869 161.52803 14.71606 162.10063 C
13.57087 162.43342 11.38791 164.44091 12.58016 165.99118 C
13.16523 166.52551 13.75030 167.05956 14.33480 167.59332 C
14.69707 168.29915 13.97650 169.49140 14.33480 170.18731 C
15.18945 170.27150 16.71789 169.81540 17.99688 170.11106 C
19.33909 170.42117 24.67928 172.45559 25.16797 173.39131 C
25.34627 175.06942 25.52372 176.74838 25.70202 178.42649 C
26.06655 179.57622 26.99150 180.12302 26.99915 181.63049 C
26.77606 181.75096 26.75112 181.81644 26.61761 182.01175 C
24.64016 182.01515 23.41219 182.00778 21.81175 182.01175 C
21.49058 182.44998 20.99537 182.70822 20.66683 183.15609 C
20.64643 183.66180 20.60476 183.75307 20.74337 184.07169 C
20.87943 184.34494 20.70283 184.16211 20.97184 184.30044 C
21.88743 184.54280 22.16863 183.71140 23.03206 183.99515 C
24.19540 184.37839 27.88044 185.98394 28.52504 186.81817 C
29.90636 188.60570 29.28416 191.53276 31.11874 192.84491 C
32.52784 192.86164 33.33345 192.58696 34.39871 192.46337 C
34.44236 192.27175 34.31424 192.21562 34.70428 192.15836 C
34.33096 189.82233 32.18570 188.78372 31.27096 186.97068 C
30.16091 184.77043 30.31370 181.85046 29.82189 179.11276 C
29.72863 178.59713 29.12372 177.09732 29.28784 176.59559 C
31.25962 176.41276 30.60765 178.98520 31.95780 179.64709 C
33.38391 180.01757 35.27433 179.83049 35.92488 180.94365 C
36.63581 182.16227 35.87131 183.63883 36.30614 185.06353 C
36.79795 186.67474 37.52476 188.60230 37.75578 190.25121 C
38.01345 192.09203 35.81858 192.32532 37.22145 194.29427 C
@c
F

@rax %Note: Object
16.48176 202.81833 45.88016 242.43222 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
37.18318 236.86328 m
37.00545 236.76151 36.82715 236.65975 36.64970 236.55798 C
36.70044 236.48173 36.75090 236.40576 36.80164 236.32923 C
36.95443 236.35474 37.10721 236.38025 37.25943 236.40576 C
37.31046 236.50724 37.36148 236.60872 37.41222 236.71077 C
37.38699 236.76151 37.36148 236.81254 37.33597 236.86328 C
37.28494 236.86328 37.23420 236.86328 37.18318 236.86328 C
@c
37.56501 237.85512 m
37.48876 237.77858 37.41222 237.70261 37.33597 237.62608 C
37.38699 237.42283 37.43773 237.21931 37.48876 237.01578 C
37.69172 237.09203 37.89553 237.16857 38.09849 237.24482 C
38.09849 237.37181 38.09849 237.49880 38.09849 237.62608 C
38.07298 237.67710 38.04831 237.72813 38.02280 237.77858 C
37.87002 237.80409 37.71723 237.82961 37.56501 237.85512 C
@c
40.46372 240.90633 m
42.53017 240.80315 44.61250 239.46718 45.88044 238.69417 C
45.82800 238.35090 45.93883 237.82394 45.65112 237.54983 C
44.10709 235.30904 39.27997 235.92302 37.41222 233.96428 C
38.27565 232.58920 39.49058 233.14876 40.84498 232.36243 C
42.84879 231.19909 46.57975 225.20438 43.66800 222.59707 C
42.89528 221.90570 41.35181 221.66901 40.46372 221.14800 C
39.28422 220.45550 37.54828 222.06869 36.72595 220.30894 C
36.67521 219.57109 36.62419 218.83380 36.57317 218.09650 C
35.75452 216.75997 34.36526 216.13408 33.75043 214.51096 C
34.12176 213.90746 34.70797 213.84510 35.42854 213.59537 C
36.10488 213.95424 36.13238 214.26406 36.42038 214.89222 C
38.15943 214.93247 41.44252 214.14501 42.59962 213.44258 C
43.13509 213.11773 43.40353 211.57228 43.51521 210.84888 C
43.16910 210.56882 42.88620 209.93074 42.29461 209.70454 C
40.09181 208.78186 38.69178 212.14205 36.57317 210.77263 C
35.10482 209.82416 37.16079 206.55468 36.26816 204.82214 C
34.20737 200.82359 26.63887 203.73789 24.29036 205.58523 C
24.34139 205.66148 24.39241 205.73745 24.44315 205.81370 C
27.77046 207.04535 32.28009 206.19298 33.67389 209.47578 C
33.56957 209.62035 33.59991 209.60050 33.44542 209.70454 C
31.37272 210.51184 29.18891 208.90006 27.11339 209.39924 C
26.34208 209.58491 24.90831 209.67052 24.29036 210.16233 C
23.98535 210.51865 23.68063 210.87439 23.37506 211.23043 C
23.45131 211.38321 23.52784 211.53543 23.60409 211.68794 C
25.38283 211.64995 32.05106 212.24665 32.45357 212.98479 C
32.45357 213.13757 32.45357 213.29008 32.45357 213.44258 C
31.96658 214.13934 31.78828 213.84255 31.38520 214.81597 C
31.58447 215.60457 31.48894 216.28346 31.84299 216.95187 C
32.43798 218.07411 33.49928 219.12236 33.59820 220.69020 C
33.48567 220.84611 33.46157 220.88693 33.29263 220.99521 C
31.85150 221.91307 29.11124 218.91657 27.57118 218.55430 C
27.57118 218.60476 27.57118 218.65578 27.57118 218.70680 C
27.19276 219.43077 27.59896 220.32652 27.87591 221.07146 C
28.94060 223.93417 32.31496 224.80980 34.74227 222.74957 C
36.45780 222.70620 37.34277 223.51861 38.40435 224.12296 C
39.25871 224.60995 40.43452 225.03912 40.99776 225.80135 C
42.79209 228.22838 39.07304 230.90173 37.41222 231.44683 C
34.67764 232.34513 32.09698 229.40787 30.92797 228.31909 C
29.56904 227.05313 28.15002 225.41443 26.65559 224.35228 C
25.44378 223.49027 24.35131 222.86268 23.52784 221.68205 C
22.29676 219.91691 21.90104 217.10296 20.93414 215.12098 C
16.95090 215.03254 16.15663 218.66570 16.58580 221.75802 C
16.60620 221.90882 18.85153 223.32728 19.33228 223.81795 C
20.29805 224.98753 21.26438 226.15767 22.23099 227.32724 C
23.50346 228.54274 25.42961 229.55754 26.88491 230.53153 C
29.03868 231.97294 33.31446 233.29956 34.89506 235.10863 C
34.89506 235.13414 34.89506 235.15937 34.89506 235.18488 C
33.20617 235.88135 30.82677 236.69688 30.01266 238.31291 C
30.03817 238.36337 30.06283 238.41439 30.08835 238.46542 C
34.55405 237.59065 37.87739 239.50517 40.46372 240.90633 C
@c
22.91726 242.43222 m
23.26762 242.29191 23.32148 242.16888 23.52784 241.89846 C
23.44961 240.84198 24.87628 236.89843 25.74000 236.55798 C
25.46561 234.80532 26.05181 234.22479 24.44315 233.20148 C
20.70737 233.78400 20.31364 235.76060 21.08693 239.76198 C
21.29868 240.86154 20.87490 241.48063 21.23915 242.12721 C
21.79871 242.22898 22.35827 242.33074 22.91726 242.43222 C
@c
F

@rax %Note: Object
9.92098 249.45109 52.44066 293.54542 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
19.58343 269.74375 m
18.93260 268.70031 16.61584 266.21518 16.53194 265.16608 C
16.58296 265.16608 16.63313 265.16608 16.68416 265.16608 C
16.88797 265.16608 17.09093 265.16608 17.29474 265.16608 C
18.26872 266.55250 20.99509 266.76794 20.34624 269.36220 C
20.21896 269.48920 20.09197 269.61619 19.96469 269.74375 C
19.83742 269.74375 19.71014 269.74375 19.58343 269.74375 C
@c
35.52746 271.72715 m
34.65184 270.78973 33.33203 270.31436 32.55250 269.28595 C
32.55250 269.13317 32.55250 268.98066 32.55250 268.82816 C
32.62904 268.77713 32.70472 268.72611 32.78098 268.67537 C
34.06620 268.70060 37.01565 269.86791 36.21402 271.19310 C
35.96967 271.59704 36.12387 271.65969 35.52746 271.72715 C
@c
20.88028 274.85490 m
20.54976 274.80387 20.21896 274.75313 19.88844 274.70239 C
19.86293 274.52409 19.83742 274.34636 19.81191 274.16835 C
20.27537 273.93137 20.58973 273.64961 21.18529 273.71055 C
21.33808 273.86306 21.49087 274.01556 21.64309 274.16835 C
21.56655 274.37187 21.49087 274.57512 21.41433 274.77865 C
21.23631 274.80387 21.05802 274.82939 20.88028 274.85490 C
@c
44.14847 274.93087 m
43.91036 274.66639 43.77628 274.45380 43.69068 274.01556 C
43.71591 273.96482 43.74142 273.91408 43.76693 273.86306 C
44.04643 273.96482 44.32592 274.06630 44.60598 274.16835 C
44.63150 274.29534 44.65701 274.42261 44.68195 274.54961 C
44.63150 274.67688 44.58076 274.80387 44.52973 274.93087 C
44.40246 274.93087 44.27518 274.93087 44.14847 274.93087 C
@c
25.91546 275.84646 m
24.44712 275.12532 22.23808 273.20598 23.47398 270.88753 C
23.57575 270.91304 23.67780 270.93855 23.77899 270.96406 C
25.06706 271.87767 27.35206 274.08416 27.59357 275.69395 C
27.15449 275.81613 26.55326 275.85524 25.91546 275.84646 C
@c
36.21402 278.74573 m
35.95550 278.55666 35.82935 278.52406 35.68025 278.21169 C
35.62951 278.05890 35.57849 277.90639 35.52746 277.75389 C
35.65502 277.57559 35.78145 277.39786 35.90901 277.21984 C
36.08702 277.27058 36.26476 277.32161 36.44306 277.37263 C
36.53490 277.98435 36.80391 278.18759 36.59584 278.66948 C
36.46857 278.69499 36.34129 278.72022 36.21402 278.74573 C
@c
26.83106 280.11883 m
26.13770 279.61739 24.87827 278.75820 25.15209 277.60110 C
25.33039 277.57559 25.50869 277.55065 25.68643 277.52513 C
26.54532 278.08016 27.10375 278.51046 27.59357 279.43200 C
27.52356 280.09077 27.19559 280.00006 26.83106 280.11883 C
@c
39.64734 293.54570 m
42.18945 293.53408 44.88803 288.19191 45.36879 285.91654 C
45.64715 284.60013 44.48239 283.75880 45.06378 282.63628 C
45.81411 281.18778 47.22718 280.26567 48.03902 278.89795 C
48.53452 278.06315 48.47924 276.83802 49.10712 276.15175 C
49.97424 275.20328 51.68920 275.06069 52.31083 273.86306 C
52.54044 273.45600 52.43386 272.99509 52.23487 272.64274 C
49.91159 271.50888 45.08617 271.28438 43.91915 268.98066 C
42.90548 266.97855 43.78620 264.81345 43.08009 262.57238 C
42.62230 260.51301 42.16450 258.45279 41.70699 256.39313 C
41.55704 255.96454 40.81181 254.68469 41.02044 254.25694 C
40.63918 253.46296 40.04731 252.63439 39.64734 251.89228 C
39.23235 251.12324 39.48321 249.80031 39.03676 249.45080 C
39.03676 249.50154 39.03676 249.55228 39.03676 249.60331 C
37.21181 251.13742 36.72142 254.02450 36.44306 256.92718 C
36.21572 259.30120 37.08028 262.45191 36.29027 264.09827 C
36.23924 264.12378 36.18907 264.14901 36.13805 264.17452 C
32.51282 264.02769 30.45770 261.71972 26.22047 262.41959 C
25.94721 263.80488 25.21928 267.08542 26.29672 268.21757 C
27.04762 269.00759 28.34391 269.27745 28.96696 270.20154 C
29.11918 270.65906 29.27197 271.11685 29.42476 271.57465 C
29.83408 272.27452 30.58980 272.92932 31.10287 273.55776 C
31.56633 274.12611 32.53776 277.76693 31.56066 278.05890 C
30.70715 278.31402 29.22350 276.01002 28.89071 275.46520 C
28.04967 274.09011 27.60605 272.37402 26.75452 270.96406 C
25.04778 268.13934 23.33735 268.42847 22.63493 264.25077 C
22.31631 262.35383 24.35839 257.28208 23.77899 256.69814 C
23.67780 256.57115 23.57575 256.44416 23.47398 256.31688 C
22.83052 256.28513 22.65279 256.26416 22.25339 256.46967 C
21.62126 257.36882 20.84627 258.41792 20.49902 259.59742 C
20.18636 260.65814 20.33320 261.65622 19.81191 262.49613 C
19.73565 262.52164 19.65997 262.54715 19.58343 262.57238 C
16.79584 261.06265 15.64498 258.18378 10.65770 258.83433 C
10.50491 258.98683 10.35213 259.13962 10.19991 259.29184 C
10.17383 260.54674 9.53915 263.64302 10.27644 264.70857 C
11.06447 265.44586 11.85279 266.18343 12.64082 266.92072 C
14.28605 268.96110 15.70082 271.13613 17.37099 273.09997 C
17.34576 273.22753 17.32025 273.35480 17.29474 273.48180 C
17.24372 273.50731 17.19298 273.53254 17.14195 273.55776 C
15.71528 272.98318 12.16261 271.65430 10.50491 272.41370 C
10.46211 276.73795 14.52019 278.34888 16.83694 280.42384 C
18.15052 281.60107 22.73783 286.28957 23.32120 287.74772 C
23.78381 288.90454 23.40057 289.86746 23.85524 290.95143 C
25.49140 291.40469 26.56035 290.64586 27.89858 290.26517 C
27.74268 287.95238 26.29559 287.24060 25.07584 285.68778 C
22.61310 282.55238 19.05109 280.00658 16.07414 277.37263 C
15.23820 276.63279 14.24211 276.12227 13.55641 275.23616 C
13.60715 275.08365 13.65817 274.93087 13.70920 274.77865 C
14.34643 274.85490 21.71877 276.28129 21.94781 276.45704 C
24.03609 278.05776 24.15713 285.13616 28.66139 283.09408 C
29.08318 282.28564 30.41972 280.14576 31.10287 279.58479 C
31.17940 279.58479 31.25565 279.58479 31.33134 279.58479 C
33.41452 281.41682 32.86063 282.14306 31.86567 284.54372 C
32.73392 285.59027 33.41395 286.08463 34.84120 286.60337 C
35.45603 285.31077 36.14995 284.49184 37.28211 283.93313 C
39.48094 285.24614 37.45786 291.68249 39.64734 293.54570 C
@c
F

@rax %Note: Object
15.64724 302.26110 46.71496 343.06243 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
35.69584 321.77225 m
35.44072 321.42756 35.21707 321.00690 35.16180 320.47540 C
35.46170 319.85915 35.68167 319.15247 36.07739 318.64422 C
36.10290 318.64422 36.12813 318.64422 36.15364 318.64422 C
36.33194 318.89849 36.50967 319.15304 36.68769 319.40731 C
36.76620 320.51764 36.96661 320.96920 36.45921 321.69572 C
36.20466 321.72123 35.95068 321.74674 35.69584 321.77225 C
@c
26.84665 322.15351 m
25.92907 321.60387 25.51323 321.34649 24.93921 320.39887 C
24.99024 320.39887 25.04098 320.39887 25.09200 320.39887 C
25.19376 320.32290 25.29581 320.24636 25.39701 320.17039 C
26.12551 320.55307 26.55099 321.01739 27.15165 321.46724 C
27.15165 321.61975 27.15165 321.77225 27.15165 321.92504 C
27.05017 322.00101 26.94841 322.07726 26.84665 322.15351 C
@c
30.73720 323.14535 m
30.55946 322.86586 30.38117 322.58580 30.20343 322.30630 C
30.20740 321.87345 30.22413 321.81846 30.43219 321.61975 C
30.50872 321.67049 30.58498 321.72123 30.66151 321.77225 C
30.78794 321.92504 30.91550 322.07726 31.04277 322.22976 C
31.05326 322.65213 31.00734 322.90753 30.88998 323.14535 C
30.83896 323.14535 30.78794 323.14535 30.73720 323.14535 C
@c
37.60328 340.92057 m
35.72192 340.69209 33.83943 340.46277 31.95808 340.23430 C
28.20189 339.12397 25.56539 336.14901 23.71861 333.06293 C
23.32545 332.40586 21.98523 329.89408 22.42176 328.94334 C
22.47279 328.86709 22.52381 328.79083 22.57455 328.71430 C
24.69061 329.04057 29.70170 335.42135 32.49184 332.30013 C
34.48602 331.29978 32.03887 327.16913 31.95808 325.73906 C
33.04205 324.84189 34.75729 323.22983 36.61143 323.45036 C
36.77669 323.89002 36.96548 324.07597 37.60328 324.06094 C
39.00699 323.01865 40.84469 322.79839 41.57036 321.16195 C
41.57036 320.55165 41.57036 319.94107 41.57036 319.33106 C
40.56463 318.41008 39.36359 317.67080 38.13761 316.73735 C
35.45546 314.69528 33.14636 312.23055 29.44035 311.09187 C
28.20926 310.71345 27.17461 311.07260 26.08384 311.09187 C
25.51068 312.37824 25.00328 313.04693 25.01575 315.21146 C
25.72809 315.87250 26.43987 316.53383 27.15165 317.19515 C
27.12614 317.34737 27.10120 317.50016 27.07569 317.65266 C
26.80611 318.01805 26.13231 317.33887 25.54980 317.57641 C
24.20447 318.12576 22.52920 318.87043 22.87956 320.85666 C
22.92945 321.13871 22.75172 321.67162 23.03235 321.92504 C
23.86403 323.12353 31.18365 325.43688 29.05880 327.87524 C
29.05880 327.92598 29.05880 327.97701 29.05880 328.02775 C
27.49436 327.53395 22.83931 326.89361 22.11704 325.73906 C
21.51694 325.07291 22.13376 323.57027 21.58271 322.45880 C
20.33263 319.93852 20.17304 314.57537 20.59087 311.09187 C
20.73430 309.89934 19.97660 309.45657 20.43865 308.57443 C
21.54983 308.55118 21.74003 307.67641 22.57455 307.35383 C
23.65228 306.93685 28.05761 307.85953 29.51660 308.19288 C
29.51660 308.29465 29.51660 308.39613 29.51660 308.49817 C
29.18693 308.70425 29.20734 309.08126 29.13534 309.33723 C
29.16085 309.38797 29.18608 309.43899 29.21159 309.49002 C
30.57137 309.43106 31.35997 307.87569 32.87367 308.49817 C
33.64809 308.81679 33.80343 309.68079 34.62831 310.02378 C
35.94614 309.46450 37.54063 307.73282 39.43417 308.42164 C
43.64419 309.95263 44.21735 321.19200 43.09625 326.42589 C
42.92476 327.22441 43.17761 329.52019 42.79068 330.54548 C
42.76517 331.38454 42.73965 332.22387 42.71499 333.06293 C
42.08939 335.63934 42.05537 338.57660 40.88381 340.61556 C
40.01868 340.76523 38.86101 340.92454 37.60328 340.92057 C
@c
35.61959 343.05676 m
38.47720 343.08539 41.29937 343.04627 42.94346 341.83616 C
46.85471 338.95672 46.45276 331.73943 46.45276 325.35780 C
46.45276 323.19638 46.45276 321.03468 46.45276 318.87326 C
45.94961 314.83020 47.73203 309.63345 45.76649 306.43824 C
44.94898 305.10992 39.04299 301.03370 36.53490 302.62365 C
35.33131 303.38702 33.61833 306.36397 31.34750 305.75169 C
30.70063 305.57707 30.07134 305.10595 29.44035 304.75984 C
29.01033 304.52428 23.32857 303.67899 22.42176 303.99704 C
21.32192 304.38283 20.93244 305.20942 20.13307 305.82794 C
19.15313 305.36957 19.03691 304.40098 17.61591 304.37830 C
17.59039 304.37830 17.56488 304.37830 17.53937 304.37830 C
17.00589 305.23663 16.30970 306.24378 15.78501 307.27757 C
15.62712 307.58854 15.57751 310.57455 15.78501 311.01534 C
16.67792 312.91285 17.06258 315.63156 17.53937 317.95795 C
17.94756 319.94986 17.40643 321.85134 17.15811 322.91660 C
17.03083 324.11169 16.90356 325.30706 16.77685 326.50214 C
16.61584 327.29556 16.15011 328.89855 16.47128 330.08769 C
18.02750 335.84117 20.42334 336.62126 24.55795 339.69997 C
25.88712 340.68983 27.87761 341.00447 29.28813 341.83616 C
29.54211 341.83616 29.79666 341.83616 30.05065 341.83616 C
30.97304 342.09921 32.46576 342.52923 33.40715 342.90425 C
34.14501 342.95499 34.88230 343.00573 35.61959 343.05676 C
@c
F

@rax %Note: Object
13.67291 348.09165 48.68957 391.34721 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
25.11638 372.73294 m
23.36570 371.95115 22.52154 371.07553 21.30180 369.83367 C
21.28677 368.47191 21.98438 368.54135 22.36989 367.85055 C
22.39540 367.13849 22.42091 366.42643 22.44643 365.71436 C
22.49405 365.53521 22.36195 365.66561 22.52211 365.48532 C
22.77553 364.92690 23.71039 364.82854 24.58233 365.02753 C
25.45880 366.36009 26.76926 369.00028 25.80265 371.20706 C
25.44123 372.03279 25.91518 372.26778 25.11638 372.73294 C
@c
40.52636 377.61534 m
36.77131 376.14898 33.63987 378.99836 33.73682 373.19074 C
33.75043 372.36217 33.97209 371.88425 34.34712 371.43609 C
34.37263 371.43609 34.39814 371.43609 34.42365 371.43609 C
36.72113 373.65392 39.60794 374.52104 41.74696 377.31005 C
41.65115 377.54079 41.74809 377.40132 41.59474 377.53909 C
41.23814 377.56460 40.88239 377.58983 40.52636 377.61534 C
@c
27.93883 391.34721 m
29.55345 391.31093 35.28369 387.26617 35.87272 386.15981 C
36.38183 384.27931 34.77827 382.13518 35.72050 380.28557 C
38.28444 379.49102 41.28803 380.57443 44.03565 381.04809 C
45.89660 381.36926 48.47839 380.85165 48.68957 379.44652 C
47.28898 377.10000 44.91213 375.42756 42.58602 374.02980 C
41.34019 373.28088 39.07446 372.66860 38.84825 370.97830 C
38.97496 370.85102 39.10224 370.72375 39.22980 370.59676 C
40.01471 369.59159 43.08661 369.95613 44.41691 369.52894 C
44.65729 369.06548 45.39458 368.34917 45.02750 367.46901 C
44.20715 365.94283 42.28980 366.49276 40.45011 366.17216 C
38.32526 365.80167 36.91786 363.71424 35.10992 362.66287 C
34.28334 362.18211 33.57893 362.39698 32.66901 361.89978 C
30.78652 360.87165 32.46661 357.09109 31.60063 355.18649 C
31.26359 354.44523 30.34658 354.28394 29.92252 353.66088 C
29.15915 352.54006 29.71559 351.01332 29.08346 349.69380 C
28.72687 349.16003 28.37112 348.62570 28.01509 348.09165 C
27.98957 348.09165 27.96406 348.09165 27.93883 348.09165 C
27.88157 350.44866 26.28850 352.90205 25.42139 354.72869 C
24.86806 355.89458 25.53024 357.87798 24.88734 359.07732 C
24.20107 359.10283 23.51395 359.12778 22.82769 359.15329 C
22.13575 360.65650 21.67002 362.80176 20.00494 363.34942 C
19.06753 363.65754 18.61370 362.77200 17.63972 363.19663 C
17.43987 363.69865 17.20176 364.63946 16.87691 365.10406 C
16.24167 366.01313 14.96154 366.33628 14.43543 367.39276 C
13.85490 368.56120 15.16535 369.99213 13.67291 370.52050 C
13.67291 370.67329 13.67291 370.82551 13.67291 370.97830 C
14.93603 371.76775 14.30022 374.86318 14.43543 376.70003 C
15.94857 376.41742 16.19376 375.13162 17.41124 374.86885 C
18.71546 374.58765 19.34901 375.91257 20.08120 376.31849 C
22.23383 377.51131 25.04381 377.99858 26.79477 379.29373 C
26.84551 380.18381 26.89654 381.07361 26.94671 381.96369 C
26.89654 383.03178 26.84551 384.09987 26.79477 385.16797 C
26.99717 385.90526 27.45666 386.60740 27.55729 387.22762 C
27.81071 388.79121 27.10772 390.13597 27.78661 391.27096 C
27.83679 391.29619 27.88781 391.32170 27.93883 391.34721 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel16Dict 16.0 0
%%EOF
