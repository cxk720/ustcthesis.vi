%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -0.00028 0.00000 62.36135 209.76378 
%%LanguageLevel: 3
%%Creator: CorelDRAW X6
%%Title: ustc_logo_text_vert_abbv.eps
%%CreationDate: Thu Jun 12 20:46:08 2014
%%DocumentProcessColors: Cyan Magenta 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW X6 16.1.0.843 °æ±¾
/EpsFile true def
%%BeginResource: procset wCorel16Dict 16.0 0
/wCorel16Dict 300 dict def wCorel16Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/validate_cie_colorspace_whitepoint{load dup aload pop
/WhitePoint get 1 1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE
where{pop/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint
/DocGrayScaleSpace xd DocGrayScaleSpace aload pop begin pop/DecodeA where{pop
DecodeA type/arraytype eq{DecodeA aload pop/DecodeA exch def}if}if end}if
/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE validate_cie_colorspace_whitepoint
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE
validate_cie_colorspace_whitepoint/DocCmykSpace xd}if}bd/set_rendering_intent{
Level3{findcolorrendering{/ColorRendering findresource setcolorrendering}{dup
/DefaultColorRendering eq{pop}{/ColorRendering findresource setcolorrendering}
}ifelse}{pop}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5
array astore}def}ifelse/setcustomcolor where SeparationMode/OnHost ne and{pop}
{/tint_cmyk_color{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}
ifelse}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll
pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch
aload pop SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{
CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd
}ifelse/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}
repeat 3 copy min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd
/safe_setcolorspace{dup currentcolorspace eq{pop}{setcolorspace}ifelse}bd
/safe_setoverprint{dup type/booleantype eq{dup currentoverprint ne{
setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse}bd/is_cmyk_channel_name{
/channel_name xd channel_name/Cyan eq channel_name/Magenta eq or channel_name
/Yellow eq or channel_name/Black eq or{true}{false}ifelse}bd
/is_rgb_channel_name{/channel_name xd channel_name/Red eq channel_name/Green eq
or channel_name/Blue eq or{true}{false}ifelse}bd/is_spot_channel_name{
/channel_name xd channel_name is_cmyk_channel_name channel_name
is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse}bd
/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{currentdict false
SeparationMode/OnHost eq{SeparationPlateName/Black eq{SeparateInColor{pop
convert_to_cmyk true}{pop true}ifelse}if}if}bd/convert_to_cmyk{0 0 0 color
aload pop 1 exch sub create_cmyk_color}bd currentdict end def
/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin/color exch 1 array
astore def/ColorSpace DocGrayScaleSpace def currentdict end}bd/RgbColorSpec
ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3 def/ColorModel/Rgb
def/ColorSpace DocRgbSpace def/separate_color{convert_to_cmyk/separate_color
dexec}bd/convert_to_cmyk{color aload pop convert_rgb_to_cmyk create_cmyk_color
}bd currentdict end def/create_rgb_color{RgbColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocRgbSpace def currentdict end}bd
/CmykColorSpec ColorSpec 9 dict copy begin/names{/Cyan/Magenta/Yellow/Black}
def/num 4 def/ColorModel/Cmyk def/ColorSpace DocCmykSpace def/separate_color{
currentdict false SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{
color SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0
4 SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}if}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/separate_color{SeparateInColor{convert_to_cmyk true}{color
aload pop 1 exch sub create_grayscale_color true}ifelse}bd/convert_to_cmyk{
color aload pop dup dup dup create_cmyk_color}bd currentdict end def
/create_registration_color{RegistrationColorSpec 9 dict copy begin 1 array
astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict copy begin
/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace def
/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0 0 0
create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9 dict
copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def currentdict
end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd
}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{
@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel16Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-0.00028 0.00000 62.36135 209.76378 @E
/$fm 0 def
62.36135 0.00000 m
-0.00028 0.00000 L
-0.00028 209.76378 L
62.36135 209.76378 L
62.36135 0.00000 L
@c
N

@rax %Note: Object
13.70920 155.44970 48.65272 198.53887 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
24.74816 179.88690 m
23.32233 179.04444 22.41836 178.19972 21.32220 177.06983 C
21.31540 175.80586 22.06913 175.80387 22.38831 175.01471 C
22.85093 173.86923 22.14794 173.43184 22.54025 172.65430 C
22.71798 172.52731 22.89572 172.40060 23.07317 172.27389 C
23.56129 172.12394 23.95077 172.16362 24.44343 172.27389 C
26.16661 173.69263 26.71087 177.98343 25.28107 179.88690 C
25.10362 179.88690 24.92589 179.88690 24.74816 179.88690 C
@c
40.73528 184.83506 m
37.13017 183.49710 33.43975 186.22602 33.73115 180.19106 C
33.76715 179.44554 34.02198 179.10085 34.34060 178.66857 C
36.96151 180.62561 39.43446 182.28983 41.72485 184.53033 C
41.69934 184.60658 41.67383 184.68283 41.64888 184.75909 C
41.34416 184.78431 41.03972 184.80983 40.73528 184.83506 C
@c
14.39490 183.92173 m
15.87487 183.80466 16.10787 182.80318 17.05946 182.24674 C
18.51591 181.77732 19.15172 182.97780 20.02819 183.54076 C
20.49307 183.83953 20.97808 183.70715 21.47471 183.99770 C
23.15055 184.97707 25.10929 185.54258 26.72759 186.43380 C
26.89427 187.86671 26.41635 191.57074 26.80384 192.52375 C
26.94813 192.87950 27.38211 193.55754 27.48869 193.97055 C
27.82772 195.27874 26.91581 197.79279 27.86939 198.46205 C
27.86939 198.48756 27.86939 198.51279 27.86939 198.53830 C
29.51235 198.54709 35.29729 194.46038 35.86309 193.36139 C
36.38324 191.54976 35.35880 189.37587 35.55836 187.72781 C
37.89808 185.27641 45.33165 190.62369 48.65272 186.96671 C
48.00699 184.68652 44.63858 182.43241 42.56192 181.25717 C
41.28718 180.53518 39.02145 179.87102 38.83209 178.13594 C
40.86992 176.62904 45.06945 178.26435 45.07455 174.70970 C
44.82057 174.43077 44.56715 174.15156 44.31317 173.87235 C
42.87118 172.99332 40.57597 173.86923 39.06028 173.03499 C
37.58003 172.22031 36.50372 170.74857 35.10170 169.91376 C
34.30091 169.43698 32.80280 169.51493 32.28491 168.77197 C
31.20888 167.22822 32.36939 164.58661 31.59978 162.52951 C
31.28400 161.68592 30.17537 161.54277 29.84882 160.77855 C
29.59512 159.53528 29.34113 158.29143 29.08772 157.04787 C
28.83798 156.42935 28.33143 155.96589 28.02161 155.44970 C
27.99638 155.50016 27.97087 155.55090 27.94535 155.60135 C
27.05074 157.57767 26.19156 160.09540 25.35704 162.14910 C
24.88309 163.31669 25.47043 165.18898 24.82413 166.33559 C
24.21553 166.36110 23.60636 166.38661 22.99691 166.41184 C
21.79247 167.16359 22.05609 169.49537 20.78929 170.21820 C
19.68973 170.84580 18.43654 169.98888 17.43987 170.67515 C
16.99002 171.94082 16.62888 172.68548 15.68891 173.41569 C
15.38447 173.61893 15.07975 173.82189 14.77531 174.02485 C
14.18910 174.87865 14.86318 176.24608 14.39490 177.22233 C
14.18854 177.65150 13.81011 177.53641 13.70948 178.21191 C
14.80819 179.50847 14.42353 181.81134 14.39490 183.92173 C
@c
F

@rax %Note: Object
15.62598 108.43682 46.73565 149.29058 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
35.66523 128.04321 m
35.48778 127.71326 35.31005 127.38359 35.13231 127.05335 C
35.38602 126.36822 35.64000 125.68309 35.89370 124.99795 C
36.38976 125.04728 36.33591 125.09546 36.42633 125.53087 C
36.97795 125.73893 36.97313 127.67471 36.35036 127.96696 C
36.12189 127.99247 35.89370 128.01770 35.66523 128.04321 C
@c
26.75820 128.42391 m
26.11984 128.00324 24.85616 127.37764 25.15946 126.52072 C
26.25506 126.58734 26.50139 127.24838 27.13890 127.73849 C
27.08787 127.96696 27.03742 128.19543 26.98668 128.42391 C
26.91071 128.42391 26.83446 128.42391 26.75820 128.42391 C
@c
30.71679 129.41348 m
30.46762 129.00019 30.23036 128.73855 30.18416 128.11918 C
30.26013 128.04321 30.33609 127.96696 30.41263 127.89071 C
30.48860 127.94173 30.56485 127.99247 30.64054 128.04321 C
30.74230 128.19543 30.84406 128.34765 30.94526 128.50016 C
31.07565 128.76293 31.09011 128.97439 30.94526 129.26126 C
30.80835 129.41660 30.94441 129.31512 30.71679 129.41348 C
@c
37.56869 147.15128 m
35.74431 146.43524 33.20532 147.04384 31.85887 146.46643 C
28.25376 144.91984 21.76384 139.76532 22.41893 135.04706 C
22.49490 135.02154 22.57115 134.99603 22.64712 134.97109 C
24.71159 135.66019 26.41550 137.59030 28.20472 138.85342 C
28.92189 139.35969 31.81635 139.26076 32.31553 138.70120 C
34.64929 137.25269 32.04935 133.93786 32.01109 131.92554 C
33.15827 131.10208 34.54951 129.74117 36.35036 129.64167 C
36.63269 129.82734 36.83225 130.28485 37.11175 130.40306 C
37.82636 130.70608 42.69997 127.95024 41.45102 125.60712 C
40.78715 124.38397 39.27288 123.89272 38.17729 123.09477 C
34.19546 120.19380 32.73250 117.32513 26.14932 117.38523 C
25.64192 118.19083 24.40857 119.78646 25.08350 121.41978 C
25.76835 122.13043 26.45376 122.84107 27.13890 123.55143 C
27.06236 123.72917 26.98668 123.90690 26.91071 124.08435 C
26.88520 124.08435 26.85969 124.08435 26.83446 124.08435 C
25.58494 123.29802 23.43855 124.67310 22.87587 125.98753 C
22.87587 126.72340 22.87587 127.45928 22.87587 128.19543 C
23.30731 128.55061 23.73846 128.90608 24.16989 129.26126 C
26.12863 130.47109 30.06539 130.87077 29.11833 134.20942 C
29.06759 134.23493 29.01685 134.26044 28.96583 134.28539 C
26.84239 133.63002 23.65739 133.37943 22.19046 132.23027 C
21.49682 131.68630 22.11222 129.93931 21.65754 128.80431 C
21.38712 128.12882 20.86923 127.13471 20.59200 126.44447 C
20.61723 123.88167 20.64274 121.31830 20.66797 118.75521 C
20.52369 117.48217 20.14441 115.49112 20.51546 114.87288 C
21.59348 114.83206 21.67172 114.02277 22.49490 113.73080 C
23.77191 113.27783 29.00750 114.29433 29.57528 114.64469 C
29.27509 115.01915 29.10161 115.36980 29.19430 115.78649 C
29.24504 115.81200 29.29578 115.83723 29.34652 115.86274 C
30.36671 115.54157 31.67121 114.27307 32.84872 114.79663 C
33.53017 115.09965 33.85332 116.12580 34.44746 116.24343 C
35.03679 116.41068 37.52561 114.88734 38.17729 114.49247 C
39.67030 113.58709 42.27420 118.10721 42.66907 118.83146 C
43.34655 120.07361 42.63987 121.60375 43.12573 123.01852 C
43.81002 125.01071 43.68586 130.59666 43.12573 132.38249 C
43.12573 133.27058 43.12573 134.15868 43.12573 135.04706 C
42.80882 136.93238 42.62882 139.07083 42.36463 140.60438 C
42.04970 142.43074 41.82463 146.65011 40.38548 146.92309 C
40.02236 147.35820 38.33660 147.17962 37.56869 147.15128 C
@c
35.58898 149.28293 m
38.31279 149.30816 40.53515 149.31978 42.36463 148.44557 C
47.47209 146.00466 46.47543 133.91320 46.47572 125.98753 C
46.47572 122.73477 47.41767 115.04608 45.71433 112.74123 C
44.94983 111.70687 39.47669 107.70605 37.41619 108.55417 C
35.51726 109.33597 34.63767 111.52063 32.62025 112.05638 C
31.23043 112.42460 30.17424 111.45231 29.42277 111.06652 C
28.99134 111.04101 28.55991 111.01550 28.12847 110.99027 C
25.42762 110.25865 21.57817 109.63134 20.28728 112.13206 C
20.18580 112.13206 20.08431 112.13206 19.98255 112.13206 C
19.31046 111.49370 18.86457 110.67959 17.54674 110.68583 C
17.02063 111.74343 16.20397 112.56180 15.79606 113.73080 C
15.02617 115.93446 17.09717 121.94050 17.54674 124.00838 C
17.86791 125.48551 17.65162 127.89921 17.24230 128.80431 C
17.24230 129.26126 17.24230 129.71792 17.24230 130.17458 C
16.77288 131.75376 16.56992 133.86699 16.48063 135.65594 C
16.14387 142.41458 25.37660 146.61014 30.56485 148.44557 C
31.53855 148.78998 32.55392 148.80104 33.38135 149.13071 C
34.11694 149.18173 34.85339 149.23247 35.58898 149.28293 C
@c
F

@rax %Note: Object
10.00205 54.88356 52.35959 98.88605 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
19.54828 75.05773 m
19.00772 73.45757 17.61789 72.18198 16.57928 71.02290 C
16.59798 70.61499 16.60734 70.60564 16.80775 70.41373 C
18.31720 70.90668 20.86356 72.44249 20.46161 74.52482 C
20.28416 74.70227 20.10671 74.88000 19.92898 75.05773 C
19.80227 75.05773 19.67528 75.05773 19.54828 75.05773 C
@c
35.61137 77.11313 m
34.80633 76.15843 33.46441 75.37039 32.49014 74.60079 C
32.54088 74.42334 32.59162 74.24561 32.64265 74.06787 C
33.91313 74.01061 36.44079 74.78872 36.44872 76.42800 C
36.20891 76.57739 36.12983 76.79962 35.99206 77.03688 C
35.86535 77.06239 35.73836 77.08791 35.61137 77.11313 C
@c
20.46161 80.15839 m
20.30967 80.08186 20.15745 80.00617 20.00494 79.92992 C
19.84706 79.77600 19.90148 79.85367 19.85272 79.54923 C
20.10869 79.25386 20.69915 78.86665 21.22328 79.09257 C
21.34998 79.14302 21.47698 79.19376 21.60369 79.24479 C
21.65301 79.62633 21.67795 79.82334 21.45146 80.08186 C
21.12180 80.10737 20.79184 80.13288 20.46161 80.15839 C
@c
44.13798 80.31033 m
43.88570 79.93020 43.78195 79.55405 43.68104 79.16854 C
44.17313 79.26151 44.42910 79.34145 44.59465 79.77770 C
44.59465 79.90441 44.59465 80.03140 44.59465 80.15839 C
44.44214 80.20913 44.28992 80.25987 44.13798 80.31033 C
@c
25.71477 81.14797 m
24.71046 80.34973 22.37301 78.92957 23.35493 76.58022 C
23.40539 76.47846 23.45641 76.37726 23.50687 76.27550 C
23.60835 76.27550 23.71011 76.27550 23.81187 76.27550 C
25.18696 77.62337 26.56970 78.93780 27.61795 80.61506 C
27.59244 80.71654 27.56693 80.81802 27.54170 80.91978 C
27.49124 80.99575 27.44022 81.07172 27.38948 81.14797 C
26.83134 81.14797 26.27291 81.14797 25.71477 81.14797 C
@c
36.22054 84.04072 m
36.01729 83.88850 35.81461 83.73628 35.61137 83.58406 C
35.58983 83.11606 35.59408 83.06135 35.68762 82.67046 C
35.78910 82.61972 35.89058 82.56898 35.99206 82.51795 C
36.14457 82.56898 36.29650 82.61972 36.44872 82.67046 C
36.58932 83.46246 37.12734 83.81934 36.22054 84.04072 C
@c
26.85685 85.41099 m
26.22217 84.98665 24.51402 83.71332 25.41005 82.82268 C
26.39169 82.98369 27.14287 83.82104 27.61795 84.72586 C
27.59244 84.90387 27.56693 85.08132 27.54170 85.25877 C
27.51619 85.28428 27.49124 85.30980 27.46573 85.33502 C
27.26277 85.36054 27.05953 85.38576 26.85685 85.41099 C
@c
39.79871 98.88605 m
42.34876 98.13742 44.57140 94.21852 45.27978 91.65345 C
45.76167 89.90929 44.40274 88.75361 45.35575 87.39043 C
46.24384 86.35011 47.13250 85.30923 48.02031 84.26891 C
48.29953 83.43213 48.57874 82.59449 48.85767 81.75713 C
49.68283 80.59011 51.82838 80.46000 52.35987 79.01631 C
52.35987 78.73710 52.35987 78.45817 52.35987 78.17896 C
50.36683 75.98353 45.28687 77.18117 43.90951 74.37260 C
43.63030 72.21572 43.35137 70.05855 43.07187 67.90139 C
42.61550 65.84627 42.15827 63.79030 41.70161 61.73518 C
41.14318 60.11291 40.26104 58.58844 39.64620 57.16743 C
39.32872 56.43326 39.46847 55.23279 39.11329 54.88356 C
39.08778 54.93402 39.06283 54.98504 39.03732 55.03578 C
35.25676 57.28592 37.33285 64.99757 36.37276 69.42416 C
36.32202 69.44939 36.27156 69.47490 36.22054 69.50013 C
32.67666 69.50409 30.39137 67.00564 26.32365 67.74945 C
25.86671 68.87027 25.22069 72.39912 26.32365 73.53524 C
27.08731 74.32157 28.30422 74.64189 28.98822 75.51439 C
29.52255 76.19613 29.59909 77.16104 30.13030 77.79855 C
31.07395 78.93071 32.87877 81.35291 31.72904 83.20337 C
31.51531 83.41767 31.30328 83.33802 30.96765 83.27962 C
30.43474 82.31868 29.28586 81.63609 28.68378 80.61506 C
27.57458 78.73313 27.32400 76.85603 26.01950 75.20995 C
25.10220 74.05257 23.53776 73.27984 22.97395 71.78428 C
22.57200 70.71817 22.59071 66.86617 23.04992 65.61751 C
23.47682 64.45871 23.98479 63.59102 23.96353 62.11587 C
23.81187 61.98888 23.65937 61.86189 23.50687 61.73518 C
20.74847 60.60728 20.76605 66.87439 19.92898 67.67320 C
19.82778 67.74945 19.72602 67.82513 19.62425 67.90139 C
18.62107 67.43565 18.26164 66.64677 17.49288 65.99849 C
15.99307 64.73339 12.87553 63.72255 10.56529 64.24753 C
10.46381 64.37424 10.36205 64.50094 10.26057 64.62794 C
10.24016 66.00954 9.68910 68.54683 10.26057 69.88082 C
11.07241 70.66743 11.88482 71.45433 12.69694 72.24094 C
13.55924 73.50973 14.42239 74.77852 15.28526 76.04702 C
15.93553 76.98331 16.98038 77.56526 17.41663 78.71159 C
17.34038 78.76233 17.26441 78.81335 17.18816 78.86409 C
15.69231 78.25436 12.62580 77.04000 10.56529 77.72202 C
10.51058 81.48387 13.24488 82.65487 15.28526 84.34545 C
17.33329 86.04255 20.01061 88.62746 21.60369 90.74013 C
22.18734 91.52674 22.77099 92.31364 23.35493 93.10025 C
23.76652 94.23411 23.31354 95.36343 23.96353 96.29745 C
25.74227 96.65660 26.76501 95.91364 27.92268 95.53635 C
27.77584 93.36784 26.45887 92.44885 25.18186 91.04457 C
22.53997 88.13962 19.42498 85.67320 16.50302 83.05115 C
15.55427 82.19934 14.38186 81.56296 13.61027 80.53880 C
13.66101 80.38658 13.71175 80.23436 13.76249 80.08186 C
15.58942 80.51329 17.41663 80.94501 19.24384 81.37616 C
20.05569 81.42690 20.86809 81.47792 21.67994 81.52866 C
23.70756 82.68520 24.34167 90.64545 28.68378 88.38028 C
29.26403 87.42274 30.13682 85.73556 30.96765 84.95433 C
31.14510 84.95433 31.32312 84.95433 31.50057 84.95433 C
33.34479 87.34620 32.91591 87.20702 31.88098 89.82652 C
32.72627 90.77953 33.40431 91.59817 34.92652 91.88192 C
35.19439 90.83509 36.12076 89.70180 36.98164 89.21735 C
37.15965 89.24287 37.33682 89.26838 37.51483 89.29361 C
39.33978 91.74784 37.47742 97.06932 39.79871 98.88605 C
@c
F

@rax %Note: Object
18.22932 11.33773 44.13317 46.29175 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
34.36866 22.68113 m
37.26369 22.54535 41.35748 18.73191 42.28611 16.59118 C
43.51550 13.75569 41.07118 11.28756 38.25099 11.33858 C
37.76882 11.92167 37.28665 12.50561 36.80447 13.08954 C
35.71427 15.50041 35.68507 16.92964 33.91200 18.72283 C
33.46328 19.17638 31.60063 20.25099 31.85631 20.77795 C
32.20129 21.96312 33.33600 22.14085 34.36866 22.68113 C
@c
27.66926 46.28098 m
28.79915 46.29458 29.91515 46.35808 30.56202 45.90028 C
32.21915 44.72844 31.93795 38.27169 32.08479 36.84104 C
32.22283 35.49260 31.36195 34.27852 31.70409 33.33940 C
31.75483 33.26315 31.80557 33.18690 31.85631 33.11093 C
32.88331 33.22800 36.32485 33.90605 36.72850 34.70939 C
36.80447 34.93786 36.88072 35.16605 36.95698 35.39452 C
36.62107 35.84863 35.11899 37.48450 35.81490 38.05909 C
36.01786 38.05909 36.22110 38.05909 36.42378 38.05909 C
36.54198 37.74614 36.60548 38.01713 36.95698 37.75465 C
38.61751 36.51307 38.71786 36.75260 41.06778 36.30813 C
41.60069 36.30813 42.13361 36.30813 42.66652 36.30813 C
42.95027 36.18425 43.24961 35.90135 43.65638 36.00369 C
43.78309 35.80072 43.90980 35.59748 44.03679 35.39452 C
44.40161 34.23231 43.66006 33.49077 42.97068 32.95843 C
40.50312 32.97827 31.22646 28.99701 30.33383 27.55361 C
29.90239 26.85628 30.16517 25.18129 29.87717 24.43209 C
28.97433 22.08699 28.26567 19.07291 26.67969 17.35228 C
24.75836 15.26854 20.78646 15.14409 19.06668 17.42854 C
19.09191 17.68195 19.11742 17.93622 19.14293 18.18964 C
20.19373 20.00183 22.83562 19.56501 24.47178 20.77795 C
25.93701 21.86447 26.53370 24.36378 27.44079 26.03083 C
27.33931 26.23380 27.23811 26.43704 27.13635 26.64000 C
25.75786 26.89115 22.55924 25.92992 20.89389 26.64000 C
19.55622 27.38891 18.56324 28.97745 18.22932 30.52233 C
18.28006 30.59858 18.33080 30.67483 18.38183 30.75080 C
20.03386 30.87184 21.55493 29.97638 23.02526 30.06567 C
23.20923 29.85335 26.98753 31.23156 27.21260 31.35969 C
27.62476 31.59524 28.03266 31.52466 28.27843 31.89288 C
28.80595 32.68375 28.96583 38.23909 28.65883 39.96255 C
28.57181 40.45238 27.98306 41.95446 28.27843 42.32239 C
27.55276 43.39446 26.78513 44.31713 26.90787 45.67209 C
27.16157 45.87506 27.41528 46.07802 27.66926 46.28098 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel16Dict 16.0 0
%%EOF
