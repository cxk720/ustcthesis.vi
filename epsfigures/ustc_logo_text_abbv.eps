%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0.00000 0.00113 201.25984 62.36220 
%%LanguageLevel: 3
%%Creator: CorelDRAW X6
%%Title: ustc_logo_text_abbv.eps
%%CreationDate: Thu Jun 12 20:49:12 2014
%%DocumentProcessColors: Cyan Magenta 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 3 def
%Build: CorelDRAW X6 16.1.0.843 °æ±¾
/EpsFile true def
%%BeginResource: procset wCorel16Dict 16.0 0
/wCorel16Dict 300 dict def wCorel16Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/validate_cie_colorspace_whitepoint{load dup aload pop
/WhitePoint get 1 1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE
where{pop/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint
/DocGrayScaleSpace xd DocGrayScaleSpace aload pop begin pop/DecodeA where{pop
DecodeA type/arraytype eq{DecodeA aload pop/DecodeA exch def}if}if end}if
/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE validate_cie_colorspace_whitepoint
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE
validate_cie_colorspace_whitepoint/DocCmykSpace xd}if}bd/set_rendering_intent{
Level3{findcolorrendering{/ColorRendering findresource setcolorrendering}{dup
/DefaultColorRendering eq{pop}{/ColorRendering findresource setcolorrendering}
}ifelse}{pop}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5
array astore}def}ifelse/setcustomcolor where SeparationMode/OnHost ne and{pop}
{/tint_cmyk_color{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}
ifelse}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll
pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch
aload pop SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{
CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd
}ifelse/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}
repeat 3 copy min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd
/safe_setcolorspace{dup currentcolorspace eq{pop}{setcolorspace}ifelse}bd
/safe_setoverprint{dup type/booleantype eq{dup currentoverprint ne{
setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse}bd/is_cmyk_channel_name{
/channel_name xd channel_name/Cyan eq channel_name/Magenta eq or channel_name
/Yellow eq or channel_name/Black eq or{true}{false}ifelse}bd
/is_rgb_channel_name{/channel_name xd channel_name/Red eq channel_name/Green eq
or channel_name/Blue eq or{true}{false}ifelse}bd/is_spot_channel_name{
/channel_name xd channel_name is_cmyk_channel_name channel_name
is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse}bd
/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{currentdict false
SeparationMode/OnHost eq{SeparationPlateName/Black eq{SeparateInColor{pop
convert_to_cmyk true}{pop true}ifelse}if}if}bd/convert_to_cmyk{0 0 0 color
aload pop 1 exch sub create_cmyk_color}bd currentdict end def
/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin/color exch 1 array
astore def/ColorSpace DocGrayScaleSpace def currentdict end}bd/RgbColorSpec
ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3 def/ColorModel/Rgb
def/ColorSpace DocRgbSpace def/separate_color{convert_to_cmyk/separate_color
dexec}bd/convert_to_cmyk{color aload pop convert_rgb_to_cmyk create_cmyk_color
}bd currentdict end def/create_rgb_color{RgbColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocRgbSpace def currentdict end}bd
/CmykColorSpec ColorSpec 9 dict copy begin/names{/Cyan/Magenta/Yellow/Black}
def/num 4 def/ColorModel/Cmyk def/ColorSpace DocCmykSpace def/separate_color{
currentdict false SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{
color SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0
4 SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}if}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/separate_color{SeparateInColor{convert_to_cmyk true}{color
aload pop 1 exch sub create_grayscale_color true}ifelse}bd/convert_to_cmyk{
color aload pop dup dup dup create_cmyk_color}bd currentdict end def
/create_registration_color{RegistrationColorSpec 9 dict copy begin 1 array
astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict copy begin
/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace def
/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0 0 0
create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9 dict
copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def currentdict
end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd
}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{
@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel16Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00113 201.25984 62.36220 @E
/$fm 0 def
0.00000 62.36220 m
201.25984 62.36220 L
201.25984 0.00113 L
0.00000 0.00113 L
0.00000 62.36220 L
@c
N

@rax %Note: Object
11.34000 7.91235 189.92041 54.04167 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.8000 0.0000 0.0000  create_cmyk_color set_solid_fill
177.58828 24.27024 m
178.22211 25.97216 180.50230 26.92998 182.53587 25.79244 C
184.94362 24.44598 188.51584 21.53055 188.47361 17.57140 C
186.82753 16.84488 186.79720 15.05367 184.13461 15.05934 C
183.87383 15.76403 183.05858 16.02425 182.68838 16.73405 C
182.03102 17.99376 182.23909 19.06753 181.54658 20.15943 C
180.46913 21.85795 178.82532 23.00797 177.58828 24.27024 C
@c
181.62283 41.77786 m
182.88907 41.76170 183.15780 40.59298 184.13461 40.33134 C
186.07209 39.81260 188.21650 40.13150 189.91984 39.26580 C
189.93487 38.18353 189.64743 37.79235 189.53915 37.05846 C
186.79748 36.78633 181.44737 34.53817 179.33896 33.17613 C
178.20340 32.44252 176.59616 32.42580 176.06608 31.12101 C
175.72252 30.27657 176.18173 28.92302 175.68510 28.00006 C
175.18195 28.03521 175.28343 26.13487 174.99997 25.71619 C
173.75216 23.87424 173.04180 21.64847 171.42265 20.00750 C
170.94529 19.94882 170.22869 19.56387 169.74765 19.32208 C
168.03553 18.46148 164.93896 20.62318 164.95228 21.83386 C
164.95228 21.85937 164.95228 21.88488 164.95228 21.91011 C
165.57449 22.30186 165.82365 23.02214 166.70296 23.35663 C
168.00917 23.85326 169.24082 23.76000 170.28085 24.42217 C
171.70554 25.32954 172.43603 28.28976 173.32554 29.75074 C
173.22378 29.95370 173.12258 30.15666 173.02082 30.35962 C
171.67805 30.59178 169.07528 30.28734 166.70296 30.28337 C
165.82791 31.74888 163.85046 32.28775 164.26715 34.54611 C
165.68419 34.13169 166.63266 34.17562 167.76879 33.78529 C
168.69770 33.46583 170.24910 33.99562 170.81348 34.31792 C
171.09269 34.31792 171.37162 34.31792 171.65055 34.31792 C
172.21975 34.45965 173.85902 35.06542 174.16261 35.53597 C
174.97446 36.79370 174.69326 44.20602 174.16261 45.88809 C
173.74535 47.21159 172.59704 47.53814 172.79263 49.39002 C
172.99672 49.42233 173.34255 49.90082 173.40180 49.92265 C
174.23887 49.92265 175.07622 49.92265 175.91357 49.92265 C
176.13694 49.45181 176.84164 49.02746 177.13162 48.55238 C
177.55087 47.86554 177.45817 46.18658 177.81676 45.43143 C
177.81676 44.82255 177.81676 44.21367 177.81676 43.60479 C
177.81676 41.87962 177.81676 40.15389 177.81676 38.42844 C
177.71924 38.18523 177.42359 37.64891 177.51203 36.90624 C
178.31055 36.66869 182.18948 37.70362 182.61213 38.35247 C
182.79865 38.68838 182.83691 38.84854 182.84060 39.18954 C
182.17587 39.81203 181.52986 40.61339 181.62283 41.77786 C
@c
141.35471 32.57546 m
141.43068 32.52501 141.50693 32.47398 141.58318 32.42324 C
141.81137 32.57546 142.03984 32.72797 142.26831 32.87991 C
142.26520 33.29972 142.28957 33.32069 142.03984 33.48879 C
141.93808 33.48879 141.83688 33.48879 141.73540 33.48879 C
141.60869 33.18463 141.48142 32.87991 141.35471 32.57546 C
@c
133.13367 36.45780 m
133.23515 36.28006 133.33663 36.10233 133.43811 35.92488 C
133.48885 35.89937 133.53959 35.87386 133.59061 35.84891 C
133.74255 35.87386 133.89477 35.89937 134.04728 35.92488 C
134.10850 36.40620 134.22841 36.54198 134.42769 36.83820 C
134.40246 36.93997 134.37694 37.04117 134.35143 37.14293 C
134.30069 37.16816 134.25024 37.19339 134.19921 37.21861 C
133.97102 37.16816 133.74255 37.11742 133.51436 37.06668 C
133.38737 36.86372 133.26038 36.66076 133.13367 36.45780 C
@c
130.31717 27.47537 m
131.49411 26.92403 133.33975 28.37225 134.04728 28.92161 C
134.06287 29.37742 134.02318 29.72608 133.89477 29.98743 C
133.68331 30.11074 133.58976 30.27203 133.43811 30.44409 C
132.35981 29.62545 131.47313 28.88164 130.31717 28.08425 C
130.31717 27.88129 130.31717 27.67833 130.31717 27.47537 C
@c
122.85723 36.30529 m
123.16167 36.28006 123.46611 36.25483 123.77083 36.22932 C
124.21276 36.80107 124.78252 37.20019 125.21707 37.82778 C
125.16633 38.08148 125.11559 38.33518 125.06485 38.58888 C
124.83638 38.58888 124.60819 38.58888 124.37972 38.58888 C
123.61408 38.11606 122.86772 37.41279 122.85723 36.30529 C
@c
121.03030 30.29216 m
121.15502 29.97666 121.16268 29.67619 121.33502 29.45452 C
121.36025 29.45452 121.38548 29.45452 121.41099 29.45452 C
122.66872 30.81260 123.89641 32.33764 125.21707 33.64101 C
125.16633 33.86948 125.11559 34.09824 125.06485 34.32614 C
121.80671 34.41061 121.25197 32.70104 121.03030 30.29216 C
@c
117.52894 32.80394 m
117.73191 32.65172 117.93487 32.49950 118.13783 32.34699 C
118.97972 32.29852 119.18976 32.40539 119.43184 32.95616 C
119.27962 33.10838 119.12740 33.26060 118.97518 33.41310 C
118.51852 33.33685 118.06157 33.26060 117.60491 33.18463 C
117.57969 33.05764 117.55417 32.93093 117.52894 32.80394 C
@c
114.25578 23.66929 m
115.79981 24.48680 117.45751 24.93128 118.06157 26.63802 C
118.28069 27.19729 118.14973 27.93883 117.75713 28.16050 C
117.60605 28.28239 117.65140 28.25943 117.37672 28.31244 C
116.48353 27.14117 114.52649 24.98939 114.25578 23.66929 C
@c
107.78542 18.56920 m
107.81065 20.09169 107.83587 21.61417 107.86139 23.13666 C
108.64800 23.87225 109.43490 24.60813 110.22123 25.34400 C
111.92343 27.46205 113.58255 29.73855 115.16910 31.89033 C
115.06762 31.96658 114.96586 32.04283 114.86466 32.11852 C
113.83002 31.70324 109.60753 30.01521 108.16583 31.05298 C
108.12387 34.60025 111.04101 36.09921 113.03773 37.67556 C
115.62605 39.71877 117.64772 42.59452 119.88850 45.05924 C
120.20145 45.40365 120.75789 45.66813 120.95433 46.12479 C
121.29676 46.92274 121.31546 48.14022 121.33502 49.32198 C
121.66413 49.43424 121.59411 49.39540 121.71543 49.70268 C
123.72945 49.74576 124.42479 49.23893 125.67373 48.71310 C
125.70180 46.20246 123.75836 45.79512 122.85723 44.29814 C
122.09102 43.02510 120.85313 42.25408 119.73628 41.32942 C
117.82035 39.74343 116.33584 38.15206 114.48425 36.76195 C
113.34416 35.90646 112.40901 34.39616 111.13483 33.71726 C
111.21080 33.61578 111.28706 33.51430 111.36331 33.41310 C
112.47024 33.54123 114.18066 33.93666 115.24507 34.40239 C
116.64057 34.55461 118.03663 34.70683 119.43184 34.85906 C
119.81225 35.31572 120.19294 35.77266 120.57364 36.22932 C
121.46173 38.23824 121.99720 40.80983 123.92306 41.86205 C
124.68387 41.86205 125.44554 41.86205 126.20665 41.86205 C
126.24917 41.63811 128.35446 38.57669 128.79468 38.13222 C
130.79906 39.21052 130.83704 41.38044 129.55606 42.92787 C
129.71027 43.04211 129.78765 43.45087 129.86022 43.84148 C
130.81720 44.30806 131.68828 44.92176 132.75298 45.13550 C
132.83121 43.93701 133.79329 43.36724 134.35143 42.62343 C
134.82397 42.60614 135.21940 42.64129 135.49323 42.77565 C
135.52611 43.27540 135.78605 44.66154 136.02643 45.21146 C
136.02643 45.74438 136.02643 46.27729 136.02643 46.80992 C
136.21351 47.95965 135.96775 50.57291 136.55906 51.45335 C
136.74813 51.73455 137.31222 52.03672 137.62460 52.21474 C
140.10945 51.43068 142.25046 47.31987 143.10539 44.67883 C
143.62129 43.08548 142.24224 42.70309 142.72498 41.25317 C
143.15187 39.97049 144.68003 38.93811 145.54148 37.82778 C
146.20791 36.96860 146.00920 35.85742 146.60702 34.93531 C
147.12066 34.14274 149.35068 33.22290 150.18463 32.27102 C
150.18463 32.01732 150.18463 31.76362 150.18463 31.50964 C
149.82406 31.30243 149.70926 30.99997 149.42324 30.74854 C
148.84413 30.71991 147.90898 30.33496 147.36841 30.06369 C
147.03817 30.06369 146.70879 30.06369 146.37855 30.06369 C
145.73509 29.88397 144.17546 29.60107 143.63802 29.30230 C
142.90923 28.89694 142.33266 28.22117 141.65915 27.77981 C
141.67389 26.41720 141.25833 24.82951 140.97402 23.51707 C
140.97402 22.98444 140.97402 22.45153 140.97402 21.91861 C
140.29880 18.95443 139.86624 15.68268 138.84265 13.08841 C
138.40696 11.98460 137.50469 10.94287 137.09197 9.81553 C
137.04123 9.18113 136.99020 8.54646 136.93975 7.91235 C
136.65827 8.57254 135.90510 8.97165 135.49323 9.51080 C
135.01871 10.13216 134.78400 11.51830 134.42769 12.32731 C
134.33131 12.54614 134.52690 15.44854 134.12324 14.83937 C
133.58835 16.82872 134.78683 21.92570 133.81880 22.67972 C
133.79329 22.73074 133.76806 22.78120 133.74255 22.83194 C
131.83852 21.94441 129.51638 21.82365 127.57691 20.85279 C
127.11713 20.62261 124.35562 20.80743 124.15124 21.00501 C
122.81046 21.97106 123.67474 25.17817 123.77083 26.63802 C
125.69017 27.19276 130.87049 33.59225 129.25134 36.76195 C
129.22611 36.76195 129.20060 36.76195 129.17509 36.76195 C
128.56762 36.19701 127.55509 35.80243 127.12025 35.08753 C
126.04082 33.31417 125.53824 31.01641 124.22750 29.07383 C
122.67694 26.77606 121.25650 26.99376 120.42142 23.51707 C
119.72438 20.61468 121.76135 17.94161 121.79169 15.52450 C
121.48101 15.35613 121.24006 15.03298 121.18252 14.83937 C
120.85285 14.83937 120.52290 14.83937 120.19294 14.83937 C
120.11499 15.24274 119.14498 16.02567 118.82296 16.51408 C
117.93657 17.85770 118.34929 19.63672 117.52894 21.15751 C
117.40195 21.15751 117.27524 21.15751 117.14825 21.15751 C
114.49474 19.15824 113.39887 17.26696 108.54652 17.27518 C
108.38211 17.57537 108.03515 17.82765 107.86139 17.88406 C
107.83587 18.11254 107.81065 18.34072 107.78542 18.56920 C
@c
78.47858 30.44409 m
78.84227 29.68441 79.02369 28.98624 79.31622 28.38869 C
79.46844 28.41420 79.62038 28.43972 79.77288 28.46494 C
79.84488 28.92699 80.12750 30.09600 80.38176 30.52035 C
80.17512 30.75874 80.01496 31.16891 79.84885 31.43339 C
79.54469 31.43339 79.23997 31.43339 78.93553 31.43339 C
78.79861 30.95660 78.68806 30.78255 78.47858 30.44409 C
@c
73.53099 31.58589 m
73.63247 31.48441 73.73395 31.38293 73.83543 31.28145 C
73.91169 31.33219 73.98765 31.38293 74.06362 31.43339 C
74.16539 31.58589 74.26658 31.73811 74.36835 31.89033 C
74.55345 32.27924 74.40605 32.65597 74.21613 32.87991 C
74.19090 32.87991 74.16539 32.87991 74.13987 32.87991 C
73.79320 32.41417 73.64041 31.92038 73.53099 31.58589 C
@c
68.35465 30.06369 m
68.53238 29.98743 68.70983 29.91118 68.88784 29.83521 C
69.38646 30.20230 69.99761 30.64904 70.56227 31.12923 C
70.53676 31.35770 70.51153 31.58589 70.48602 31.81436 C
70.35931 31.81436 70.23260 31.81436 70.10561 31.81436 C
69.30907 31.32113 68.76935 30.95631 68.35465 30.06369 C
@c
63.63524 18.56920 m
63.71150 18.46772 63.78775 18.36624 63.86372 18.26476 C
64.11742 18.29027 64.37112 18.31521 64.62482 18.34072 C
64.90545 16.29808 71.78202 17.23861 72.99808 18.03657 C
72.70724 18.44816 72.60633 18.65764 72.54142 19.17836 C
72.82063 19.17836 73.09984 19.17836 73.37849 19.17836 C
73.59959 18.73502 74.16142 18.73049 74.59682 18.49323 C
76.77439 17.30580 77.21291 19.79943 77.86998 19.63474 C
79.68983 19.90772 81.09184 16.55263 83.57896 18.56920 C
84.59773 19.39521 85.79650 21.28195 86.16699 22.45153 C
86.93518 24.87543 87.47121 33.09817 86.54769 35.77266 C
86.54769 36.71121 86.54769 37.65033 86.54769 38.58888 C
86.44847 39.16913 86.28888 39.91890 86.16699 40.33956 C
86.16699 41.02469 86.16699 41.70983 86.16699 42.39496 C
85.97424 43.39531 85.92350 44.61619 85.48186 45.43965 C
85.48186 45.87109 85.48186 46.30280 85.48186 46.73395 C
85.24828 47.88765 84.79134 49.40022 84.26381 50.31156 C
76.33361 51.10980 71.74942 49.12441 68.20271 44.29814 C
67.39682 43.20198 65.06929 40.12724 65.91883 38.36041 C
67.98161 38.60617 69.78643 41.04907 71.62781 42.24302 C
72.41839 42.75524 74.84173 42.63902 75.66236 42.24302 C
75.91181 42.12227 76.10315 41.66759 76.34750 41.70983 C
76.40135 41.10860 77.01902 40.46258 76.72791 39.80693 C
76.46570 39.21534 75.18161 35.97222 75.43389 35.39197 C
75.78255 34.71420 79.01376 32.73732 79.84885 33.10838 C
80.12976 33.26513 80.33244 33.55824 80.53398 33.79351 C
80.73694 33.76800 80.93991 33.74277 81.14287 33.71726 C
81.54198 32.57546 84.40980 32.71776 84.94894 30.52035 C
85.57285 27.97937 82.56217 27.30501 81.44759 26.48608 C
81.11367 26.24060 80.90986 25.71194 80.61024 25.41997 C
78.44457 23.31071 75.73408 22.50000 73.07433 20.85279 C
72.44901 20.46557 70.04665 20.83096 69.49672 20.85279 C
69.07436 21.73408 67.82343 23.22085 68.50687 24.88734 C
69.19200 25.54696 69.87713 26.20658 70.56227 26.86649 C
70.56227 26.96769 70.56227 27.06945 70.56227 27.17093 C
70.48602 27.27241 70.41005 27.37389 70.33380 27.47537 C
67.49490 27.00737 66.21024 28.53099 66.29953 31.58589 C
66.96907 31.79849 67.61565 32.71096 68.27868 33.03213 C
70.05090 33.89102 73.50094 34.62463 72.54142 37.59959 C
72.38920 37.62454 72.23669 37.65005 72.08476 37.67556 C
70.76551 36.55304 66.56655 36.99893 65.46217 35.39197 C
64.93663 34.60280 65.62148 33.24898 65.00551 32.11852 C
64.61773 31.40759 64.16646 30.54359 63.93969 29.68271 C
63.96520 26.96797 63.99071 24.25266 64.01565 21.53792 C
63.83735 20.56365 63.64772 19.42101 63.63524 18.56920 C
@c
59.06806 17.80809 m
59.05644 21.47783 60.20646 24.48539 60.97096 27.47537 C
61.41288 29.20280 60.80145 33.35839 60.28583 34.32614 C
60.26031 34.98576 60.23509 35.64595 60.20986 36.30529 C
60.04318 37.05959 59.62592 38.56734 59.90542 39.73096 C
61.41742 46.02359 67.37556 49.95638 73.37849 51.45335 C
76.80387 52.30772 83.06476 53.86989 86.31921 51.45335 C
90.57402 48.29414 89.82085 39.73124 89.82057 32.04283 C
89.84608 30.31739 89.87159 28.59165 89.89710 26.86649 C
90.36510 24.53017 90.07483 17.75962 89.13600 16.20935 C
88.42422 15.03496 82.35383 11.04945 80.68649 12.02287 C
79.09682 12.95065 77.94198 14.91761 76.04277 15.52450 C
74.62715 15.97691 73.45984 14.80082 72.76989 14.45896 C
72.28743 14.43345 71.80554 14.40794 71.32365 14.38243 C
68.66220 13.37301 64.99984 13.29732 63.71150 15.52450 C
63.58479 15.52450 63.45780 15.52450 63.33080 15.52450 C
62.69641 15.04205 61.98633 13.72394 60.89499 14.23049 C
60.19398 15.32324 59.76227 16.57474 59.06806 17.80809 C
@c
31.28372 35.54419 m
31.51616 35.01241 31.61310 34.59543 31.89288 34.17392 C
31.96913 34.17392 32.04539 34.17392 32.12135 34.17392 C
32.58454 34.93616 34.30120 35.67628 35.24230 36.22932 C
36.74806 37.11402 38.15575 38.71417 39.35254 39.95915 C
39.32702 40.08586 39.30180 40.21285 39.27657 40.33956 C
36.72142 40.39710 32.52926 40.21087 31.43622 38.51291 C
31.38548 37.52334 31.33446 36.53348 31.28372 35.54419 C
@c
18.87591 31.81436 m
20.37969 30.38712 19.58315 28.80709 20.09424 28.23676 C
20.22094 28.08425 20.34794 27.93203 20.47493 27.77981 C
21.08409 27.65565 21.61587 27.65367 22.22561 27.77981 C
23.22283 29.36835 24.86211 33.85502 22.75824 35.46794 C
20.89729 34.95742 20.00863 33.79039 18.87591 32.57546 C
18.87591 32.32148 18.87591 32.06778 18.87591 31.81436 C
@c
12.02542 39.42624 m
13.62699 39.21222 13.63323 37.93861 14.84164 37.59959 C
16.24847 37.20472 16.97102 38.60050 17.65814 39.04583 C
19.74132 40.39512 22.69871 40.43849 24.43323 42.09052 C
24.48369 42.92759 24.53443 43.76523 24.58545 44.60258 C
24.48794 45.01871 24.08145 47.19203 24.43323 48.02797 C
24.77140 48.83272 25.30460 49.94391 25.11808 50.92072 C
24.88989 52.11581 25.12885 53.65928 25.57474 54.04167 C
27.65452 53.81178 32.01874 50.40170 33.49134 48.94157 C
33.53584 46.76117 32.79090 45.06661 33.18690 43.08009 C
35.53143 41.98677 39.06850 43.29156 41.71266 43.76523 C
43.63313 44.10935 46.17439 43.49027 46.20359 41.93830 C
45.14513 41.38328 44.24712 39.80466 43.38709 38.96986 C
41.31836 36.96180 37.63332 36.57260 36.38409 33.79351 C
37.04031 32.82066 38.20791 32.65200 39.73294 32.65172 C
40.16438 32.65172 40.59609 32.65172 41.02753 32.65172 C
41.51225 32.44195 41.82803 32.09981 42.32126 31.96658 C
42.37994 31.24148 42.61776 31.03852 42.62598 30.13965 C
41.95843 29.75499 41.25685 29.15008 40.79906 28.99757 C
39.38882 28.52872 37.83373 29.22661 36.68825 28.61717 C
35.13657 27.79115 34.00866 26.53909 32.73024 25.49622 C
31.78743 24.72718 30.26976 25.03389 29.60901 23.97373 C
28.68208 22.48583 29.89247 19.60129 29.15235 17.88406 C
28.91906 17.34236 27.68457 16.97924 27.40167 16.28589 C
26.89682 15.04743 27.16072 14.02724 26.71654 12.63175 C
26.51783 12.00728 25.93587 11.55090 25.65099 11.03329 C
25.60025 11.05880 25.54923 11.08403 25.49849 11.10954 C
25.49679 12.78595 23.85496 16.04494 23.06296 17.42740 C
22.83732 17.82085 22.76759 20.94888 22.60630 21.76639 C
22.08671 21.95603 21.21506 21.93080 20.47493 21.91861 C
19.95080 23.37817 18.95471 25.60394 17.65814 26.10510 C
16.71562 26.46964 16.31225 25.50557 15.52706 25.87663 C
14.68346 26.28652 14.96750 27.34866 14.46094 27.93203 C
12.51836 30.17310 12.11074 28.68378 12.02542 32.80394 C
11.60759 32.99443 11.36665 33.19313 11.34000 33.79351 C
12.49313 34.38709 12.06057 37.59279 12.02542 39.42624 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel16Dict 16.0 0
%%EOF
